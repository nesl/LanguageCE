{
    "entities": {
        "objects": {
            "rec_vehicle" : {
                "type": "rec_vehicle"
            }
        },
        "locations": {
            "bridge_watchbox1" : {
                "name":"bridge_watchbox1",
                "file":"labels.json"
            },
            "bridge_watchbox2" : {
                "name":"bridge_watchbox2",
                "file":"labels.json"
            }
        },
        "groups": {
            "rec_group" : {
                "composition": "[rec_vehicle]",
                "total": ">=2",
                "distance": "[20, 50m]"
            }
        }
    },

    "event": "overlap(@rec_group, @bridge_watchbox1) and[10m, 10m] overlap(@rec_group, @bridge_watchbox2)"

}

c1 = sensor("camera1")
c2 = sensor("camera2")
b1 = watchbox(c1, [list of corner])
b2 = watchbox(c2, [list of corner])
se1 = b1.hasall(["person","car"])
se2 = b1.enters(["person"])
se2 = b1.has("person") and not b1.has("person",-1)
Fsm for complex events


Image --> Yolo5 ---> SE Detector ---> FSM
Yolo5 generates set of "objects" at each time index
each object is <label, location, id>
X = 1 
X = 0


X'LAST_VALUE 
X'LAST_EVENT 


X = 1
X@1 previous X
X@2 previous to previous X
